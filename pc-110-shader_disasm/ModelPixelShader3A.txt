Microsoft (R) Direct3D Shader Compiler 10.1
Copyright (C) 2013 Microsoft. All rights reserved.

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 colorFOG;
//   float4 konstColorMaterial0;
//   float4 konstColorSpecular0;
//   float levels;
//   float4 matIndirect1;
//   float3 matIndirect2;
//   sampler2D textureMaterial0;
//   sampler2D textureMaterial1;
//   sampler2D textureSpecular0;
//   sampler2D textureSpecular2;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   levels              c1       1
//   konstColorMaterial0 c2       1
//   konstColorSpecular0 c3       1
//   colorFOG            c4       1
//   matIndirect1        c5       1
//   matIndirect2        c6       1
//   textureMaterial0    s2       1
//   textureMaterial1    s3       1
//   textureSpecular0    s6       1
//   textureSpecular2    s8       1
//

    ps_3_0
    def c0, -0.5, 0.5, 2.0999999, 0
    def c7, -8, 1, 0, 0
    def c8, -30, -10, -20, -40
    dcl_color v0
    dcl_texcoord v1.xyz
    dcl_texcoord1 v2.xyz
    dcl_texcoord7 v3.xyz
    dcl_fog v4.xyz
    dcl_2d s2
    dcl_2d s3
    dcl_2d s6
    dcl_2d s8
    add r0.xyz, -v4.yyxw, v4.xzzw
    rcp r0.y, r0.y
    mul r0.xy, r0.y, r0.xzzw
    max r1.xy, r0, c0.w
    mul r0.xy, r1, c7.x
    mul r0.zw, r1.xyxy, r0.xyxy
    exp r0.z, r0.z
    exp r0.w, r0.w
    exp r0.x, r0.x
    exp r0.y, r0.y
    mov r1.w, c4.w
    add r2, r1.w, c8
    cmp r0.xy, r2.zwzw, r0.zwzw, r0
    add r0.x, -r0.x, c7.y
    cmp r0.x, r2.y, r0.x, r1.x
    cmp_sat r0.x, r2.x, r0.y, r0.x
    rcp r0.y, v3.z
    mul r0.yz, r0.y, v3.xxyw
    texld r1, r0.yzzw, s8
    add r0.yzw, r1.xwzy, c0.x
    mul r1.xy, r0.yzzw, c5
    add r1.x, r1.y, r1.x
    mad r1.x, c5.z, r0.w, r1.x
    mul r0.yz, r0, c6.xxyw
    add r0.y, r0.z, r0.y
    mad r1.y, c6.z, r0.w, r0.y
    rcp r0.y, v2.z
    mad r0.yz, v2.xxyw, r0.y, r1.xxyw
    frc r1.xy, r0_abs.yzzw
    cmp r0.yz, r0, r1.xxyw, -r1.xxyw
    add r1, r0.yyzz, c0.xyxy
    mad r1, r1, c0.z, c0.yxyx
    cmp r0.yz, r0, r1.xyww, r1.xxzw
    texld r1, r0.yzzw, s6
    mul r0.yzw, r1.xxyz, v0.xxyz
    mul r0.yzw, r0, c5.w
    rcp r1.x, v1.z
    mul r1.xy, r1.x, v1
    texld r2, r1, s2
    texld r1, r1, s3
    mul r1.xyz, r1, v0
    mul r2.xyz, r2, v0
    lrp_sat r3.xyz, c2, r1, r2
    mad_sat r0.yzw, c3.xxyz, r0, r3.xxyz
    mul_sat r0.yzw, r0, c1.x
    add r1.xyz, -r0.yzww, c4
    mad oC0.xyz, r0.x, r1, r0.yzww
    mov oC0.w, v0.w

// approximately 48 instruction slots used (4 texture, 44 arithmetic)
