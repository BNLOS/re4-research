Microsoft (R) Direct3D Shader Compiler 10.1
Copyright (C) 2013 Microsoft. All rights reserved.

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 colorFOG;
//   float3 matWarp1;
//   float3 matWarp2;
//   float4 param;
//   sampler2D texture0;
//   sampler2D texture1;
//   sampler2D texture2;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   param        c0       1
//   colorFOG     c1       1
//   matWarp1     c2       1
//   matWarp2     c3       1
//   texture0     s0       1
//   texture1     s1       1
//   texture2     s2       1
//

    ps_3_0
    def c4, 0.5, -0.5, 1, 4
    def c5, 0, -8, 0, 0
    def c6, -30, -10, -20, -40
    dcl_color v0
    dcl_texcoord v1.xyw
    dcl_texcoord1 v2.xy
    dcl_texcoord2 v3.xyz
    dcl_fog v4.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    rcp r0.x, v1.w
    mul r0.xy, r0.x, v1
    mad r0.xy, r0, c4.x, c4.x
    add r0.z, -r0.y, c4.z
    texld r1, v2, s1
    add r1.xyz, r1.wzyw, c4.y
    mul r0.yw, r1.xxzy, c2.xxzy
    add r0.y, r0.w, r0.y
    mad r2.x, c2.z, r1.z, r0.y
    mul r0.yw, r1.xxzy, c3.xxzy
    add r0.y, r0.w, r0.y
    mad r2.y, c3.z, r1.z, r0.y
    add r0.xy, r0.xzzw, r2
    texld r0, r0, s0
    mul r0.xyz, r0, c0
    mul_sat r0.xyz, r0, c4.w
    log r1.x, r0.x
    log r1.y, r0.y
    log r1.z, r0.z
    mov r0.x, c4.x
    add r0.x, r0.x, c0.w
    frc r0.y, r0.x
    add r0.x, -r0.y, r0.x
    mul r0.yzw, r1.xxyz, r0.x
    add r0.x, r0.x, -c4.z
    add r0.x, r0.x, r0.x
    exp r0.x, r0.x
    exp r1.x, r0.y
    exp r1.y, r0.z
    exp r1.z, r0.w
    mul_sat r0.xyz, r0.x, r1
    rcp r0.w, v3.z
    mul r1.xy, r0.w, v3
    texld r1, r1, s2
    mad_sat r0.xyz, v0, r1.w, r0
    add r1.xyz, -r0, c1
    add r2.xyz, -v4.yyxw, v4.xzzw
    rcp r0.w, r2.y
    mul r2.xy, r0.w, r2.xzzw
    max r3.xy, r2, c5.x
    mul r2.xy, r3, c5.y
    mul r2.zw, r3.xyxy, r2.xyxy
    exp r0.w, r2.z
    exp r1.w, r2.w
    exp r2.x, r2.x
    exp r2.y, r2.y
    mov r2.w, c1.w
    add r4, r2.w, c6
    cmp r0.w, r4.z, r0.w, r2.x
    add r0.w, -r0.w, c4.z
    cmp r0.w, r4.y, r0.w, r3.x
    cmp r1.w, r4.w, r1.w, r2.y
    cmp_sat r0.w, r4.x, r1.w, r0.w
    mad oC0.xyz, r0.w, r1, r0
    mov oC0.w, v0.w

// approximately 55 instruction slots used (3 texture, 52 arithmetic)
