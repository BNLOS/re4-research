Microsoft (R) Direct3D Shader Compiler 10.1
Copyright (C) 2013 Microsoft. All rights reserved.

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 colorFOG;
//   float2 levels;
//   sampler2D textureIllumination0;
//   sampler2D textureMaterial0;
//   sampler2D textureShadow0;
//   sampler2D textureShadow1;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   levels               c1       1
//   colorFOG             c4       1
//   textureShadow0       s0       1
//   textureShadow1       s1       1
//   textureMaterial0     s2       1
//   textureIllumination0 s10      1
//

    ps_3_0
    def c0, 0, 1, -0, -8
    def c2, -30, -10, -20, -40
    dcl_color v0
    dcl_texcoord5 v1
    dcl_texcoord v2
    dcl_texcoord4 v3.xyz
    dcl_fog v4
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s10
    add r0.xyz, -v4.yyxw, v4.xzzw
    rcp r0.y, r0.y
    mul r0.xy, r0.y, r0.xzzw
    max r1.xy, r0, c0.x
    mul r0.xy, r1, c0.w
    mul r0.zw, r1.xyxy, r0.xyxy
    exp r0.z, r0.z
    exp r0.w, r0.w
    exp r0.x, r0.x
    exp r0.y, r0.y
    mov r1.w, c4.w
    add r2, r1.w, c2
    cmp r0.xy, r2.zwzw, r0.zwzw, r0
    add r0.x, -r0.x, c0.y
    cmp r0.x, r2.y, r0.x, r1.x
    cmp_sat r0.x, r2.x, r0.y, r0.x
    rcp r0.y, v4.w
    mov r1.x, v1.w
    mov r1.y, v2.w
    mul r0.yz, r0.y, r1.xxyw
    texld r1, r0.yzzw, s1
    cmp r0.y, -v4_abs.w, c0.z, -r1.w
    rcp r0.z, v1.z
    mul r0.zw, r0.z, v1.xyxy
    texld r1, r0.zwzw, s0
    cmp r0.z, -v1_abs.z, c0.x, r1.w
    add r0.y, r0.y, r0.z
    add_sat r0.y, r0.y, c0.y
    frc r0.z, c1.y
    cmp r0.w, -r0.z, c0.x, c0.y
    add r0.z, -r0.z, c1.y
    mov r1.x, c0.x
    cmp r0.w, c1.y, r1.x, r0.w
    add r0.z, r0.w, r0.z
    add r0.z, r0.z, c0.y
    pow r1.x, r0.y, r0.z
    mul r0.yzw, r1.x, v0.xxyz
    rcp r1.x, v2.z
    mul r1.xy, r1.x, v2
    texld r1, r1, s2
    mul r0.yzw, r0, r1.xxyz
    rcp r1.x, v3.z
    mul r1.xy, r1.x, v3
    texld r1, r1, s10
    cmp r1.xyz, -v3_abs.z, c0.x, r1
    mul r0.yzw, r0, r1.xxyz
    add_sat r0.yzw, r0, r0
    mul_sat r0.yzw, r0, c1.x
    add r1.xyz, -r0.yzww, c4
    mad oC0.xyz, r0.x, r1, r0.yzww
    mov oC0.w, v0.w

// approximately 53 instruction slots used (4 texture, 49 arithmetic)
