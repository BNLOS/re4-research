Microsoft (R) Direct3D Shader Compiler 10.1
Copyright (C) 2013 Microsoft. All rights reserved.

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 colorFOG;
//   float levels;
//   float3 matIndirect1;
//   float3 matIndirect2;
//   sampler2D textureMaterial0;
//   sampler2D textureSpecular0;
//   sampler2D textureSpecular1;
//   sampler2D textureSpecular2;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   levels           c1       1
//   colorFOG         c4       1
//   matIndirect1     c5       1
//   matIndirect2     c6       1
//   textureMaterial0 s2       1
//   textureSpecular0 s6       1
//   textureSpecular1 s7       1
//   textureSpecular2 s8       1
//

    ps_3_0
    def c0, -0.5, 0, 0.5, -8
    def c2, 1, 0, 0, 0
    def c3, -30, -10, -20, -40
    dcl_color v0
    dcl_texcoord v1.xyz
    dcl_texcoord1 v2.xyz
    dcl_texcoord2 v3.xyz
    dcl_texcoord7 v4.xyz
    dcl_fog v5.xyz
    dcl_2d s2
    dcl_2d s6
    dcl_2d s7
    dcl_2d s8
    add r0.xyz, -v5.yyxw, v5.xzzw
    rcp r0.y, r0.y
    mul r0.xy, r0.y, r0.xzzw
    max r1.xy, r0, c0.y
    mul r0.xy, r1, c0.w
    mul r0.zw, r1.xyxy, r0.xyxy
    exp r0.z, r0.z
    exp r0.w, r0.w
    exp r0.x, r0.x
    exp r0.y, r0.y
    mov r1.w, c4.w
    add r2, r1.w, c3
    cmp r0.xy, r2.zwzw, r0.zwzw, r0
    add r0.x, -r0.x, c2.x
    cmp r0.x, r2.y, r0.x, r1.x
    cmp_sat r0.x, r2.x, r0.y, r0.x
    rcp r0.y, v4.z
    mul r0.yz, r0.y, v4.xxyw
    texld r1, r0.yzzw, s8
    add r0.yzw, r1.xwzy, c0.x
    mul r1.xy, r0.yzzw, c5
    add r1.x, r1.y, r1.x
    mad r1.x, c5.z, r0.w, r1.x
    mul r0.yz, r0, c6.xxyw
    add r0.y, r0.z, r0.y
    mad r1.y, c6.z, r0.w, r0.y
    rcp r0.y, v3.z
    mad r0.yz, v3.xxyw, r0.y, r1.xxyw
    texld r1, r0.yzzw, s7
    cmp r0.yzw, -v3_abs.z, c0.y, r1.xxyz
    rcp r1.x, v2.z
    mul r1.xy, r1.x, v2
    texld r1, r1, s6
    add r0.yzw, r0, -r1.xxyz
    add_sat r0.yzw, r0, c0.z
    rcp r1.x, v1.z
    mul r1.xy, r1.x, v1
    texld r1, r1, s2
    mul r1.xyz, r1, v0
    mul r0.yzw, r0, r1.xxyz
    add_sat r0.yzw, r0, r0
    mul_sat r0.yzw, r0, c1.x
    add r1.xyz, -r0.yzww, c4
    mad oC0.xyz, r0.x, r1, r0.yzww
    mov oC0.w, v0.w

// approximately 45 instruction slots used (4 texture, 41 arithmetic)
