Microsoft (R) Direct3D Shader Compiler 10.1
Copyright (C) 2013 Microsoft. All rights reserved.

//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 colorFOG;
//   float4 konstColorSpecular0;
//   float2 levels;
//   float4 matIndirect1;
//   float3 matIndirect2;
//   sampler2D textureIllumination0;
//   sampler2D textureMaterial0;
//   sampler2D textureShadow0;
//   sampler2D textureShadow1;
//   sampler2D textureSpecular0;
//   sampler2D textureSpecular2;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   levels               c1       1
//   konstColorSpecular0  c3       1
//   colorFOG             c4       1
//   matIndirect1         c5       1
//   matIndirect2         c6       1
//   textureShadow0       s0       1
//   textureShadow1       s1       1
//   textureMaterial0     s2       1
//   textureSpecular0     s6       1
//   textureSpecular2     s8       1
//   textureIllumination0 s10      1
//

    ps_3_0
    def c0, -0.5, 0.5, 2.0999999, -8
    def c2, 0, 1, -0, -0.5
    def c7, -30, -10, -20, -40
    dcl_color v0
    dcl_texcoord5 v1
    dcl_texcoord v2
    dcl_texcoord1 v3.xyz
    dcl_texcoord7 v4.xyz
    dcl_texcoord4 v5.xyz
    dcl_fog v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s6
    dcl_2d s8
    dcl_2d s10
    rcp r0.x, v4.z
    mul r0.xy, r0.x, v4
    texld r0, r0, s8
    add r0.xyz, r0.wzyw, c2.w
    mul r1.xy, r0, c5
    add r0.w, r1.y, r1.x
    mad r1.x, c5.z, r0.z, r0.w
    mul r0.xy, r0, c6
    add r0.x, r0.y, r0.x
    mad r1.y, c6.z, r0.z, r0.x
    rcp r0.x, v3.z
    mad r0.xy, v3, r0.x, r1
    frc r0.zw, r0_abs.xyxy
    cmp r0.xy, r0, r0.zwzw, -r0.zwzw
    add r1, r0.xxyy, c0.xyxy
    mad r1, r1, c0.z, c0.yxyx
    cmp r0.xy, r0, r1.ywzw, r1.xzzw
    texld r0, r0, s6
    mul r0.xyz, r0, v0
    mul r0.xyz, r0, c5.w
    mul r0.xyz, r0, c3
    rcp r0.w, v6.w
    mov r1.x, v1.w
    mov r1.y, v2.w
    mul r1.xy, r0.w, r1
    texld r1, r1, s1
    cmp r0.w, -v6_abs.w, c2.z, -r1.w
    rcp r1.x, v1.z
    mul r1.xy, r1.x, v1
    texld r1, r1, s0
    cmp r1.x, -v1_abs.z, c2.x, r1.w
    add r0.w, r0.w, r1.x
    add_sat r0.w, r0.w, c2.y
    frc r1.x, c1.y
    cmp r1.y, -r1.x, c2.x, c2.y
    add r1.x, -r1.x, c1.y
    mov r2.x, c2.x
    cmp r1.y, c1.y, r2.x, r1.y
    add r1.x, r1.y, r1.x
    add r1.x, r1.x, c2.y
    pow r2.x, r0.w, r1.x
    mul r1.xyz, r2.x, v0
    rcp r0.w, v2.z
    mul r2.xy, r0.w, v2
    texld r2, r2, s2
    mad_sat r0.xyz, r1, r2, r0
    rcp r0.w, v5.z
    mul r1.xy, r0.w, v5
    texld r1, r1, s10
    mul r0.xyz, r0, r1
    add_sat r0.xyz, r0, r0
    mul_sat r0.xyz, r0, c1.x
    cmp r0.xyz, -v5_abs.z, c2.x, r0
    add r1.xyz, -r0, c4
    add r2.xyz, -v6.yyxw, v6.xzzw
    rcp r0.w, r2.y
    mul r2.xy, r0.w, r2.xzzw
    max r3.xy, r2, c2.x
    mul r2.xy, r3, c0.w
    mul r2.zw, r3.xyxy, r2.xyxy
    exp r0.w, r2.z
    exp r1.w, r2.w
    exp r2.x, r2.x
    exp r2.y, r2.y
    mov r2.w, c4.w
    add r4, r2.w, c7
    cmp r0.w, r4.z, r0.w, r2.x
    add r0.w, -r0.w, c2.y
    cmp r0.w, r4.y, r0.w, r3.x
    cmp r1.w, r4.w, r1.w, r2.y
    cmp_sat r0.w, r4.x, r1.w, r0.w
    mad oC0.xyz, r0.w, r1, r0
    mov oC0.w, v0.w

// approximately 75 instruction slots used (6 texture, 69 arithmetic)
